{"version":3,"file":"index.js","sources":["../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/native.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../components/AnalyticsGroupProvider/AnalyticsGroupProvider.tsx","../../components/AnalyticsSubGroupProvider/AnalyticsSubGroupProvider.tsx","../../components/_hooks/useAnalytics.ts","../../components/AnalyticsFormProvider/AnalyticsFormProvider.tsx","../../components/_hooks/useExcludeFirstRenderEffect.ts"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import React, { createContext, FC, memo, ReactNode } from 'react';\n\nexport const AnalyticsGroupIdContext = createContext<string | null>(null);\n\nexport interface AnalyticsGroupProviderProps {\n    id: string;\n    children: ReactNode;\n}\n\nconst AnalyticsGroupProvider: FC<AnalyticsGroupProviderProps> = memo(\n    ({ id, children }) => {\n        return (\n            <AnalyticsGroupIdContext.Provider value={id}>\n                {children}\n            </AnalyticsGroupIdContext.Provider>\n        );\n    }\n);\n\nAnalyticsGroupProvider.displayName = 'AnalyticsGroupProvider';\n\nexport default AnalyticsGroupProvider;\n","import React, { createContext, FC, memo, ReactNode } from 'react';\n\nexport const AnalyticsSubGroupIdContext = createContext<string | null>(null);\n\nexport interface AnalyticsSubGroupProviderProps {\n    id: string;\n    children: ReactNode;\n}\n\nconst AnalyticsSubGroupProvider: FC<AnalyticsSubGroupProviderProps> = memo(\n    ({ id, children }) => {\n        return (\n            <AnalyticsSubGroupIdContext.Provider value={id}>\n                {children}\n            </AnalyticsSubGroupIdContext.Provider>\n        );\n    }\n);\n\nAnalyticsSubGroupProvider.displayName = 'AnalyticsSubGroupProvider';\n\nexport default AnalyticsSubGroupProvider;\n","import { useContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { AnalyticsFormContext } from '../AnalyticsFormProvider/AnalyticsFormProvider';\nimport { AnalyticsGroupIdContext } from '../AnalyticsGroupProvider/AnalyticsGroupProvider';\nimport { AnalyticsSubGroupIdContext } from '../AnalyticsSubGroupProvider/AnalyticsSubGroupProvider';\n\nconst useAnalytics = () => {\n    const analyticsGroupId = useContext(AnalyticsGroupIdContext);\n    const analyticsSubGroupId = useContext(AnalyticsSubGroupIdContext);\n    const formContext = useContext(AnalyticsFormContext);\n\n    const trackFormInteractionEvent = (\n        gaName: string | undefined,\n        elementType: string | undefined,\n        interactionType: string | undefined\n    ) => {\n        if (gaName) {\n            const eventData = {\n                event: 'form_interaction',\n                group: analyticsGroupId ?? '',\n                form_id: formContext?.id ?? '',\n                form_name: formContext?.name ?? '',\n                element_id: gaName,\n                element_type: elementType ?? '',\n                interaction_type: interactionType ?? '',\n            };\n\n            window.dataLayer = window.dataLayer || [];\n            window.dataLayer.push(eventData);\n        }\n    };\n\n    const trackContentInteractionEvent = (\n        gaName: string | undefined,\n        elementType: string | undefined,\n        gaConversion?: boolean | undefined\n    ) => {\n        if (gaName) {\n            const eventData = {\n                event: 'content_interaction',\n                group: analyticsGroupId ?? '',\n                sub_group: analyticsSubGroupId ?? '',\n                element_id: gaName,\n                element_type: elementType ?? '',\n                ...(elementType === 'link' && {\n                    micro_conversion: gaConversion ?? false,\n                }),\n            };\n\n            window.dataLayer = window.dataLayer || [];\n            window.dataLayer.push(eventData);\n        }\n    };\n\n    const trackSubmitEvent = (\n        id: string | undefined,\n        name: string | undefined,\n        submitType: string | undefined\n    ) => {\n        const eventData = {\n            form_id: id ?? '',\n            form_name: name ?? '',\n            event: submitType ?? '',\n            request_id: uuidv4(),\n        };\n\n        window.dataLayer = window.dataLayer || [];\n        window.dataLayer.push(eventData);\n    };\n\n    return {\n        trackFormInteractionEvent,\n        trackContentInteractionEvent,\n        trackSubmitEvent,\n    };\n};\n\nexport default useAnalytics;\n","import React, { createContext, FC, memo, ReactNode } from 'react';\n\nimport useAnalytics from '../_hooks/useAnalytics';\nimport useExcludeFirstRenderEffect from '../_hooks/useExcludeFirstRenderEffect';\n\nexport interface AnalyticsFormProviderProps {\n    id: string;\n    name: string;\n    submitType: 'generate_lead' | 'form_submit' | 'subscribed_newsletter';\n    children: ReactNode;\n    isSubmitSuccessful?: boolean;\n}\n\nexport const AnalyticsFormContext = createContext<Omit<\n    AnalyticsFormProviderProps,\n    'children'\n> | null>(null);\n\nconst AnalyticsFormProvider: FC<AnalyticsFormProviderProps> = memo(\n    ({ id, name, submitType, children, isSubmitSuccessful }) => {\n        const { trackSubmitEvent } = useAnalytics();\n\n        useExcludeFirstRenderEffect(() => {\n            trackSubmitEvent(id, name, submitType);\n        }, isSubmitSuccessful);\n\n        return (\n            <AnalyticsFormContext.Provider value={{ id, name, submitType }}>\n                {children}\n            </AnalyticsFormContext.Provider>\n        );\n    }\n);\n\nAnalyticsFormProvider.displayName = 'AnalyticsFormProvider';\n\nexport default AnalyticsFormProvider;\n","import { useEffect, useRef } from 'react';\n\nconst useExcludeFirstRenderEffect = (\n    effect: () => void | (() => void | undefined) | undefined,\n    dependency: boolean | string | number | null | undefined\n) => {\n    const isFirstRender = useRef(true);\n\n    useEffect(() => {\n        if (dependency && !isFirstRender.current) {\n            return effect();\n        }\n        isFirstRender.current = false;\n    }, [dependency]);\n};\n\nexport default useExcludeFirstRenderEffect;\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","native","randomUUID","v4","options","buf","offset","rnds","random","arr","unsafeStringify","AnalyticsGroupIdContext","createContext","memo","id","children","React","createElement","Provider","value","displayName","AnalyticsSubGroupIdContext","AnalyticsFormContext","AnalyticsFormProvider","name","submitType","isSubmitSuccessful","trackSubmitEvent","analyticsGroupId","useContext","analyticsSubGroupId","formContext","trackFormInteractionEvent","gaName","elementType","interactionType","eventData","event","group","form_id","form_name","element_id","element_type","interaction_type","window","dataLayer","trackContentInteractionEvent","gaConversion","sub_group","micro_conversion","request_id","uuidv4","useAnalytics","effect","dependency","isFirstRender","useRef","useEffect","current","useExcludeFirstRenderEffect"],"mappings":"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"}