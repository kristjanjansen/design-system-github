{"version":3,"file":"index.js","sources":["../../components/_helpers/marginToCss.ts","../../components/Typography/Typography.tsx","../../components/Typography/helpers.ts"],"sourcesContent":["import { MarginValue } from '../types';\n\nexport const marginValueToCss = (value: MarginValue): string => {\n    const spacingMap: Record<MarginValue, string> = {\n        0: 'var(--eds-spacing-none)',\n        1: 'var(--eds-spacing-small-1)',\n        2: 'var(--eds-spacing-small-2)',\n        3: 'var(--eds-spacing-small-3)',\n        4: 'var(--eds-spacing-small-4)',\n        5: 'var(--eds-spacing-small-5)',\n        6: 'var(--eds-spacing-medium-1)',\n        7: 'var(--eds-spacing-medium-2)',\n        8: 'var(--eds-spacing-medium-3)',\n        9: 'var(--eds-spacing-medium-4)',\n        10: 'var(--eds-spacing-medium-5)',\n        11: 'var(--eds-spacing-medium-6)',\n        12: 'var(--eds-spacing-medium-7)',\n        13: 'var(--eds-spacing-medium-8)',\n        14: 'var(--eds-spacing-large-1)',\n        15: 'var(--eds-spacing-large-2)',\n        16: 'var(--eds-spacing-large-3)',\n        17: 'var(--eds-spacing-large-4)',\n        18: 'var(--eds-spacing-large-5)',\n    };\n    return spacingMap[value] || '0px';\n};\n\nexport const getMarginStyles = ({\n    mt,\n    mb,\n    my,\n}: {\n    mt?: MarginValue;\n    mb?: MarginValue;\n    my?: MarginValue;\n}) => {\n    const marginTop =\n        mt !== undefined\n            ? marginValueToCss(mt)\n            : my !== undefined\n            ? marginValueToCss(my)\n            : undefined;\n    const marginBottom =\n        mb !== undefined\n            ? marginValueToCss(mb)\n            : my !== undefined\n            ? marginValueToCss(my)\n            : undefined;\n\n    return {\n        marginTop,\n        marginBottom,\n    };\n};\n","import React from 'react';\n\nimport { getMarginStyles } from '../_helpers/marginToCss';\nimport { MarginProps } from '../types';\n\nimport { getDefaultTag } from './helpers';\nimport { HeadingProps, LabelProps, TextProps } from './types';\n\nimport styles from './Typography.module.scss';\n\n// Heading component\nexport const Heading: React.FC<MarginProps & HeadingProps> = ({\n    id,\n    variant,\n    as,\n    italic = false,\n    underline = false,\n    weight = '600',\n    uppercase = false,\n    children,\n    className,\n    dangerouslySetInnerHTML,\n    mt,\n    mb,\n    my,\n    ...props\n}) => {\n    const Component = as || getDefaultTag(variant);\n    const baseClassName = styles[`heading-${variant}`];\n    const classNames = `\n        ${baseClassName}\n        ${className}\n        ${italic ? styles['text-italic'] : ''}\n        ${underline ? styles['text-underline'] : ''}\n        ${weight ? styles[`text-${weight}`] : ''}\n        ${uppercase ? styles['text-uppercase'] : ''}\n    `;\n    const margins = getMarginStyles({ mt, mb, my });\n\n    if (dangerouslySetInnerHTML) {\n        return (\n            <Component\n                id={id}\n                className={classNames}\n                style={{ ...margins }}\n                dangerouslySetInnerHTML={dangerouslySetInnerHTML}\n                {...props}\n            />\n        );\n    }\n\n    return (\n        <Component\n            id={id}\n            className={classNames}\n            style={{ ...margins }}\n            {...props}\n        >\n            {children}\n        </Component>\n    );\n};\n\nexport const Text: React.FC<MarginProps & TextProps> = ({\n    variant = 'p',\n    size = 'default',\n    italic = false,\n    underline = false,\n    weight = '400',\n    uppercase = false,\n    children,\n    className,\n    dangerouslySetInnerHTML,\n    mt,\n    mb,\n    my,\n    ...props\n}) => {\n    const Component = variant === 'p' ? 'p' : variant === 'list' ? 'ul' : 'div';\n    const baseClassName = styles[`text-${variant}-${size}`];\n    const classNames = `\n        ${baseClassName}\n        ${className}\n        ${italic ? styles['text-italic'] : ''}\n        ${underline ? styles['text-underline'] : ''}\n        ${weight ? styles[`text-${weight}`] : ''}\n        ${uppercase ? styles['text-uppercase'] : ''}\n    `;\n    const margins = getMarginStyles({ mt, mb, my });\n    if (dangerouslySetInnerHTML) {\n        return (\n            <Component\n                className={classNames}\n                dangerouslySetInnerHTML={dangerouslySetInnerHTML}\n                style={{ ...margins }}\n                {...props}\n            />\n        );\n    }\n\n    return (\n        <Component className={classNames} style={{ ...margins }} {...props}>\n            {children}\n        </Component>\n    );\n};\n\n// Label component with size application\nexport const Label: React.FC<LabelProps> = ({\n    id,\n    size = 'default',\n    children,\n    italic = false,\n    underline = false,\n    weight = '400',\n    uppercase = false,\n    className,\n    ...props\n}) => {\n    const baseClassName = styles[`label-${size}`];\n    const classNames = `\n        ${baseClassName}\n        ${className}\n        ${italic ? styles['text-italic'] : ''}\n        ${underline ? styles['text-underline'] : ''}\n        ${weight ? styles[`text-${weight}`] : ''}\n        ${uppercase ? styles['text-uppercase'] : ''}\n    `;\n    return (\n        <label id={id} className={classNames} {...props}>\n            {children}\n        </label>\n    );\n};\n","// Utility function to determine the default HTML tag\nexport function getDefaultTag(variant: string): string {\n    switch (variant) {\n        case 'h1':\n        case 'h2':\n        case 'h3':\n        case 'h4':\n        case 'h5':\n        case 'h6':\n        case 'p':\n        case 'ol':\n        case 'ul':\n            return variant;\n        case 'line':\n            return 'p';\n        case 'list':\n            return 'ol';\n        default:\n            return 'div';\n    }\n}\n"],"names":["marginValueToCss","value","getMarginStyles","mt","mb","my","marginTop","undefined","marginBottom","Heading","id","variant","as","italic","underline","weight","uppercase","children","className","dangerouslySetInnerHTML","props","Component","getDefaultTag","classNames","styles","margins","React","createElement","style","Text","size","Label"],"mappings":"kCAEO,MAAMA,EAAoBC,IACmB,CAC5C,EAAG,0BACH,EAAG,6BACH,EAAG,6BACH,EAAG,6BACH,EAAG,6BACH,EAAG,6BACH,EAAG,8BACH,EAAG,8BACH,EAAG,8BACH,EAAG,8BACH,GAAI,8BACJ,GAAI,8BACJ,GAAI,8BACJ,GAAI,8BACJ,GAAI,6BACJ,GAAI,6BACJ,GAAI,6BACJ,GAAI,6BACJ,GAAI,8BAEUA,IAAU,OAGnBC,EAAkB,EAC3BC,KACAC,KACAC,SAmBO,CACHC,eAbOC,IAAPJ,EACMH,EAAiBG,QACVI,IAAPF,EACAL,EAAiBK,QACjBE,EAUNC,kBAROD,IAAPH,EACMJ,EAAiBI,QACVG,IAAPF,EACAL,EAAiBK,QACjBE,gsCCpCDE,EAAgD,EACzDC,KACAC,UACAC,KACAC,UAAS,EACTC,aAAY,EACZC,SAAS,MACTC,aAAY,EACZC,WACAC,YACAC,0BACAhB,KACAC,KACAC,QACGe,MAEH,MAAMC,EAAYT,GC1BhB,SAAwBD,GAC1B,OAAQA,GACJ,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,IACL,IAAK,KACL,IAAK,KACD,OAAOA,EACX,IAAK,OACD,MAAO,IACX,IAAK,OACD,MAAO,KACX,QACI,MAAO,MAEnB,CDO4BW,CAAcX,GAEhCY,EAAa,aADGC,EAAO,WAAWb,iBAGlCO,cACAL,EAASW,EAAO,eAAiB,eACjCV,EAAYU,EAAO,kBAAoB,eACvCT,EAASS,EAAO,QAAQT,KAAY,eACpCC,EAAYQ,EAAO,kBAAoB,WAEvCC,EAAUvB,EAAgB,CAAEC,KAAIC,KAAIC,OAE1C,OAAIc,EAEIO,EAACC,cAAAN,EACG,CAAAX,GAAIA,EACJQ,UAAWK,EACXK,MAAO,IAAKH,GACZN,wBAAyBA,KACrBC,IAMZM,EAACC,cAAAN,EACG,CAAAX,GAAIA,EACJQ,UAAWK,EACXK,MAAO,IAAKH,MACRL,GAEHH,EAEP,EAGOY,EAA0C,EACnDlB,UAAU,IACVmB,OAAO,UACPjB,UAAS,EACTC,aAAY,EACZC,SAAS,MACTC,aAAY,EACZC,WACAC,YACAC,0BACAhB,KACAC,KACAC,QACGe,MAEH,MAAMC,EAAwB,MAAZV,EAAkB,IAAkB,SAAZA,EAAqB,KAAO,MAEhEY,EAAa,aADGC,EAAO,QAAQb,KAAWmB,iBAG1CZ,cACAL,EAASW,EAAO,eAAiB,eACjCV,EAAYU,EAAO,kBAAoB,eACvCT,EAASS,EAAO,QAAQT,KAAY,eACpCC,EAAYQ,EAAO,kBAAoB,WAEvCC,EAAUvB,EAAgB,CAAEC,KAAIC,KAAIC,OAC1C,OAAIc,EAEIO,gBAACL,EAAS,CACNH,UAAWK,EACXJ,wBAAyBA,EACzBS,MAAO,IAAKH,MACRL,IAMZM,gBAACL,EAAS,CAACH,UAAWK,EAAYK,MAAO,IAAKH,MAAeL,GACxDH,EAEP,EAIOc,EAA8B,EACvCrB,KACAoB,OAAO,UACPb,WACAJ,UAAS,EACTC,aAAY,EACZC,SAAS,MACTC,aAAY,EACZE,eACGE,MAEH,MACMG,EAAa,aADGC,EAAO,SAASM,iBAGhCZ,cACAL,EAASW,EAAO,eAAiB,eACjCV,EAAYU,EAAO,kBAAoB,eACvCT,EAASS,EAAO,QAAQT,KAAY,eACpCC,EAAYQ,EAAO,kBAAoB,WAE7C,OACIE,EAAAC,cAAA,QAAA,CAAOjB,GAAIA,EAAIQ,UAAWK,KAAgBH,GACrCH,EAEP"}