{"version":3,"file":"index.js","sources":["../../node_modules/classnames/index.js","../../components/AccordionGroup/AccordionGroup.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, {\n    createContext,\n    Dispatch,\n    ReactNode,\n    SetStateAction,\n    useEffect,\n    useState,\n} from 'react';\nimport classNames from 'classnames';\n\nimport styles from './AccordionGroup.module.scss';\n\nexport interface AccordionGroupProps {\n    mode?: 'single' | 'multiple';\n    selectedKeys?: string[];\n    children: ReactNode;\n    className?: string;\n}\n\nexport interface AccordionGroupState {\n    mode: AccordionGroupProps['mode'];\n    selectedKeys: AccordionGroupProps['selectedKeys'];\n    setSelectedKeys: Dispatch<SetStateAction<string[]>>;\n}\n\nexport const AccordionContext = createContext<AccordionGroupState | null>(null);\n\nconst AccordionGroup = (props: AccordionGroupProps) => {\n    const { mode = 'single', selectedKeys = [], children, className } = props;\n    const [selected, setSelected] = useState(selectedKeys);\n\n    const state = {\n        mode: mode,\n        selectedKeys: selected,\n        setSelectedKeys: setSelected,\n    };\n\n    useEffect(() => {\n        if (mode === 'single') {\n            // Use only first entry from array in single mode\n            selectedKeys.length > 1 && setSelected([selectedKeys[0]]);\n        }\n    }, []);\n\n    const classList = classNames(styles['accordion-group'], className);\n\n    return (\n        <div className={classList}>\n            <AccordionContext.Provider value={state}>\n                {children}\n            </AccordionContext.Provider>\n        </div>\n    );\n};\n\nexport default AccordionGroup;\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","window","AccordionContext","createContext","AccordionGroup","props","mode","selectedKeys","children","className","selected","setSelected","useState","state","setSelectedKeys","useEffect","classList","styles","React","createElement","Provider","value"],"mappings":";;;;;MAOC,WAGA,IAAIA,EAAS,CAAE,EAACC,eAGhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,EAEd,OACK,GAAgB,WAAZJ,EAAsB,CAChC,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,WAAaP,EAAIO,SAASA,WAAWG,SAAS,iBAAkB,CACrGd,EAAQM,KAAKF,EAAIO,YACjB,QACA,CAED,IAAK,IAAII,KAAOX,EACXP,EAAOmB,KAAKZ,EAAKW,IAAQX,EAAIW,IAChCf,EAAQM,KAAKS,EAGf,CAxBkB,CAyBnB,CAED,OAAOf,EAAQiB,KAAK,IACpB,CAEoCC,EAAOC,SAC3CpB,EAAWqB,QAAUrB,EACrBmB,EAAAC,QAAiBpB,GAOjBsB,OAAOtB,WAAaA,CAEtB,CApDA,qDCkBO,MAAMuB,EAAmBC,EAA0C,MAEpEC,EAAkBC,IACpB,MAAMC,KAAEA,EAAO,SAAQC,aAAEA,EAAe,GAAEC,SAAEA,EAAQC,UAAEA,GAAcJ,GAC7DK,EAAUC,GAAeC,EAASL,GAEnCM,EAAQ,CACVP,KAAMA,EACNC,aAAcG,EACdI,gBAAiBH,GAGrBI,GAAU,KACO,WAATT,GAEAC,EAAaxB,OAAS,GAAK4B,EAAY,CAACJ,EAAa,IACxD,GACF,IAEH,MAAMS,EAAYrC,EAAWsC,EAA2BR,GAExD,OACIS,EAAAC,cAAA,MAAA,CAAKV,UAAWO,GACZE,EAAAC,cAACjB,EAAiBkB,SAAQ,CAACC,MAAOR,GAC7BL,GAGX"}